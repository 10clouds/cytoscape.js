
/* jquery.cytoscapeweb.layout.arbor.min.js */

/**
 * This file is part of Cytoscape Web snapshot-2012.02.14-14.30.17.
 * 
 * Cytoscape Web is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option) any
 * later version.
 * 
 * Cytoscape Web is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU Lesser General Public License along with
 * Cytoscape Web. If not, see <http://www.gnu.org/licenses/>.
 */
 
$(function(){var c={ready:undefined,maxSimulationTime:1000,fit:true,padding:[50,50,50,50],ungrabifyWhileSimulating:true,repulsion:undefined,stiffness:undefined,friction:undefined,gravity:undefined,fps:30,dt:undefined,precision:undefined,nodeMass:undefined,edgeLength:undefined};function b(){$.cytoscapeweb("debug","Creating force-directed layout")}function a(d){if(d!=null&&typeof d==typeof function(){}){d()}}b.prototype.run=function(w){var k=$.extend(true,{},c,w);$.cytoscapeweb("debug","Running force-directed layout with options (%o)",k);
var j=k.cy;var u=j.nodes();var i=j.edges();var p=j.container();var m=window.sys=arbor.ParticleSystem(k.repulsion,k.stiffness,k.friction,k.gravity,k.fps,k.dt,k.precision);if(k.fit){j.reset()}var h=3;var s=h*1000/k.fps;var g;var o=false;var q={init:function(x){},redraw:function(){clearTimeout(g);g=setTimeout(v,s);var x=j.collection();m.eachNode(function(D,y){var C=D.name;var A=D.data;var z=A.element;if(z==null){return}var B=z._private.position;if(!z.locked()&&!z.grabbed()){B.x=y.x;B.y=y.y;x=x.add(z)
}});if(x.size()>0){x.rtrigger("position")}if(!o){o=true;j.trigger("layoutready");a(w.ready)}}};m.renderer=q;var t=p.width();var r=p.height();m.screenSize(t,r);m.screenPadding(k.padding[0],k.padding[1],k.padding[2],k.padding[3]);function n(x,y){if(y==null){return undefined}else{if(typeof y==typeof function(){}){return y.apply(x,[x.data()])}else{return y}}}function d(D){var G=D.x;var E=D.y;var H=t;var B=r;var A=-2;var I=2;var F=-2;var z=2;var C=4;return{x:G/H*C+A,y:E/B*C+I}}var l=function(y){grabbed=this;
var z=m.fromScreen(this._private.position);var x=arbor.Point(z.x,z.y);this._private.arbor.p=x;switch(y.type){case"grab":this._private.arbor.fixed=true;break;case"dragstop":this._private.arbor.fixed=false;this._private.arbor.tempMass=1000;break}};u.bind("grab drag dragstop",l);u.each(function(z,A){var C=this._private.data.id;var y=n(this,k.nodeMass);var x=this._private.locked;var B=d({x:A._private.position.x,y:A._private.position.y});this._private.arbor=m.addNode(C,{element:this,mass:y,fixed:x,x:x?B.x:undefined,y:x?B.y:undefined})
});i.each(function(){var A=this._private.data.id;var y=this.source()._private.data.id;var z=this.target()._private.data.id;var x=n(this,k.edgeLength);this._private.arbor=m.addEdge(y,z,{length:x})});function f(x){j.fit();x()}var e=u.filter(":grabbable");if(k.ungrabifyWhileSimulating){e.ungrabify()}var v=function(){if($.browser.msie){f(function(){x()})}else{x()}function x(){u.unbind("grab drag dragstop",l);if(k.ungrabifyWhileSimulating){e.grabify()}j.trigger("layoutstop");a(w.stop)}};m.start();setTimeout(function(){m.stop()
},k.maxSimulationTime)};$.cytoscapeweb("layout","arbor",b)});